#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API
"""

import json
import sys
from storage import StatsStorage
from utils import format_absence_message, format_stats_message, format_user_stats_message

def test_storage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    test_file = "test_stats.json"
    storage = StatsStorage(test_file)
    
    # –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—É–ª–æ–≤
    print("\n1. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—É–ª–æ–≤:")
    count1 = storage.add_absence("vasya", "vasya")
    print(f"   @vasya: {count1} –ø—Ä–æ–≥—É–ª")
    
    count2 = storage.add_absence("petya", "petya")
    print(f"   @petya: {count2} –ø—Ä–æ–≥—É–ª")
    
    count3 = storage.add_absence("vasya", "vasya")
    print(f"   @vasya: {count3} –ø—Ä–æ–≥—É–ª–∞")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    vasya_count = storage.get_absences("vasya")
    petya_count = storage.get_absences("petya")
    masha_count = storage.get_absences("masha")
    
    print(f"   @vasya: {vasya_count} –ø—Ä–æ–≥—É–ª–æ–≤")
    print(f"   @petya: {petya_count} –ø—Ä–æ–≥—É–ª–æ–≤")
    print(f"   @masha: {masha_count} –ø—Ä–æ–≥—É–ª–æ–≤")
    
    # –¢–µ—Å—Ç 3: –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n3. –¢–µ—Å—Ç –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    all_stats = storage.get_all_stats()
    print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(all_stats)}")
    for user_id, count in all_stats.items():
        print(f"   {user_id}: {count}")
    
    # –û—á–∏—Å—Ç–∫–∞
    import os
    if os.path.exists(test_file):
        os.remove(test_file)
    
    print("‚úÖ –¢–µ—Å—Ç—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω—ã!")

def test_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–æ–≥—É–ª–∞—Ö
    print("\n1. –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—É–ª–æ–≤:")
    test_cases = [
        (1, "1 –ø—Ä–æ–≥—É–ª"),
        (2, "2 –ø—Ä–æ–≥—É–ª–∞"),
        (5, "5 –ø—Ä–æ–≥—É–ª–æ–≤"),
        (21, "21 –ø—Ä–æ–≥—É–ª"),
        (22, "22 –ø—Ä–æ–≥—É–ª–∞"),
        (25, "25 –ø—Ä–æ–≥—É–ª–æ–≤")
    ]
    
    for count, expected in test_cases:
        result = format_absence_message("test", count)
        print(f"   {count} –ø—Ä–æ–≥—É–ª–æ–≤: {result}")
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n2. –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    test_stats = {"vasya": 3, "petya": 1, "masha": 2}
    stats_message = format_stats_message(test_stats)
    print("   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    for line in stats_message.split('\n'):
        if line.strip():
            print(f"   {line}")
    
    # –¢–µ—Å—Ç –ø—É—Å—Ç–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    empty_stats = format_stats_message({})
    print(f"   –ü—É—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {empty_stats}")
    
    # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    user_stats = [
        (0, "–ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–≥—É–ª–∏–≤–∞–ª"),
        (1, "–ø—Ä–æ–≥—É–ª—è–ª 1 —Ä–∞–∑"),
        (2, "–ø—Ä–æ–≥—É–ª—è–ª 2 —Ä–∞–∑–∞"),
        (5, "–ø—Ä–æ–≥—É–ª—è–ª 5 —Ä–∞–∑")
    ]
    
    for count, expected in user_stats:
        result = format_user_stats_message("test", count)
        print(f"   {count} –ø—Ä–æ–≥—É–ª–æ–≤: {result}")
    
    print("‚úÖ –¢–µ—Å—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω—ã!")

def test_example_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    try:
        with open("example_stats.json", "r", encoding="utf-8") as f:
            example_data = json.load(f)
        
        print("   –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        for username, count in example_data.items():
            print(f"   @{username}: {count}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_message = format_stats_message(example_data)
        print("\n   –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        for line in stats_message.split('\n'):
            if line.strip():
                print(f"   {line}")
        
        print("‚úÖ –¢–µ—Å—Ç —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–π–¥–µ–Ω!")
        
    except FileNotFoundError:
        print("‚ö†Ô∏è  –§–∞–π–ª example_stats.json –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram-–±–æ—Ç–∞ –¥–ª—è —É—á—ë—Ç–∞ –ø—Ä–æ–≥—É–ª–æ–≤")
    print("=" * 50)
    
    try:
        test_storage()
        test_formatting()
        test_example_data()
        
        print("\n" + "=" * 50)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 