#1234
import logging
from aiogram import Router, F
from aiogram.types import Message, FSInputFile, Document
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
import os

from storage import StatsStorage
from utils import (
    extract_user_from_message, 
    format_absence_message, 
    format_stats_by_levels,
    format_user_stats_message,
    format_remove_absence_message,
    is_admin,
    get_user_display_name
)
from config import STATS_FILE

logger = logging.getLogger(__name__)
router = Router()

# –°–æ–∑–¥–∞–µ–º storage —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
logger.info("üîß –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä StatsStorage...")
storage = StatsStorage()
logger.info("‚úÖ StatsStorage —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

@router.message(Command("–Ω–µ–ø—Ä–∏—à–µ–ª", "neprishel"))
async def handle_absence_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /–Ω–µ–ø—Ä–∏—à–µ–ª –∏–ª–∏ /neprishel"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = extract_user_from_message(message)
        
        if not user_info:
            await message.reply(
                "‚ùå –£–∫–∞–∂–∏ –ø—Ä–æ–≥—É–ª—å—â–∏–∫–∞ —á–µ—Ä–µ–∑ @username , –ø—Ä–∏–¥—É—Ä–æ–∫ –∏–ª–∏ –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—å —Å –∫–æ–º–∞–Ω–¥–æ–π /–Ω–µ–ø—Ä–∏—à–µ–ª"
            )
            return
        
        user_id, username = user_info
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—É–ª
        count = storage.add_absence(user_id, username)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        response = format_absence_message(username, count)
        await message.reply(response)
        
        logger.info(f"–ü—Ä–æ—ë–± –∑–∞—Å—á–∏—Ç–∞–Ω: {username} ({user_id}) - {count}")
        
    except Exception as e:
        logger.error(f"–ö–∞–∫–∞—è-—Ç–æ —Ö—É–π–Ω—è –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ–ø—Ä–∏—à–µ–ª: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –µ–±–∞–ª–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã")

@router.message(Command("—Å–Ω—è–ª", "snyal"))
async def handle_remove_absence_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /—Å–Ω—è–ª –¥–ª—è —Å–Ω—è—Ç–∏—è –ø—Ä–æ–≥—É–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    try:
        if not message.from_user:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        if not is_admin(message.from_user):
            await message.reply("‚ùå –ü–∏—Å—å–∫–∞ –µ—â—ë –Ω–µ –¥–æ—Ä–æ—Å–ª–∞ —ç—Ç–æ –∂–º–∞—Ç—å")
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = extract_user_from_message(message)
        
        if not user_info:
            await message.reply(
                "‚ùå –£–∫–∞–∂–∏ —Å–≤—è—Ç–æ—à—É —á–µ—Ä–µ–∑ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –µ–≥–æ –ø–µ—Ä–¥—ë–∂ –∫–æ–º–∞–Ω–¥–æ–π /—Å–Ω—è–ª"
            )
            return
        
        user_id, username = user_info
        
        # –°–Ω–∏–º–∞–µ–º –ø—Ä–æ–≥—É–ª
        success = storage.remove_absence(user_id)
        response = format_remove_absence_message(username, success)
        await message.reply(response)
            
        logger.info(f"–°–Ω—è—Ç –ø—Ä–æ–≥—É–ª: {username} ({user_id}) –≥–∏–≥–∞—á–∞–¥–æ–º {message.from_user.id if message.from_user else 'unknown'}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–æ–≥—É–ª–∞: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–æ–≥—É–ª–∞")

@router.message(Command("—Å—Ç–∞—Ç–∞", "stats"))
async def handle_stats_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /—Å—Ç–∞—Ç–∞ –∏–ª–∏ /stats"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = storage.get_all_stats()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        response = format_stats_by_levels(stats)
        await message.reply(response)
        
        logger.info(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É–∑–Ω–∞—Ç—å –∑–∞—Ö–æ—Ç–µ–ª? {message.from_user.id if message.from_user else 'unknown'}")
        
    except Exception as e:
        logger.error(f"–ü—Ä–æ–µ–±–∞–ª –∫–æ–¥ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∞: {e}")
        await message.reply("‚ùå –ù–∞–µ–±–∞–ª–∞—Å—å —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

@router.message(Command("—Å–∫–æ–ª—å–∫–æ", "skolko"))
async def handle_user_stats_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /—Å–∫–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = extract_user_from_message(message)
        
        if not user_info:
            await message.reply(
                "‚ùå –£–∫–∞–∂–∏ –ø—Ä–æ—ë–±—â–∏–∫–∞ —á–µ—Ä–µ–∑ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –µ–≥–æ –≤—ã—Å–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π /—Å–∫–æ–ª—å–∫–æ"
            )
            return
        
        user_id, username = user_info
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—É–ª–æ–≤
        count = storage.get_absences(user_id)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        response = format_user_stats_message(username, count)
        await message.reply(response)
        
        logger.info(f"–≠—Ç–æ—Ç –ø—Ä–∏–¥—É—Ä–æ–∫ –ø—Ä–æ–µ–±–∞–ª—Å—è: {username} ({user_id}) - {count}")
        
    except Exception as e:
        logger.error(f"–û–±—ä—ë–± –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã —Å–∫–æ–ª—å–∫–æ: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ö—É–π–Ω—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω—á–µ–ª—ã–≥–∏")

@router.message(Command("resetstats"))
async def handle_reset_stats_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /resetstats –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    try:
        if not message.from_user:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        if not is_admin(message.from_user):
            await message.reply("‚ùå –¢—ã —á–æ, —Å–∞–º—ã–π —É–º–Ω—ã–π —á—Ç–æ –ª–∏?")
            return
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        storage.reset_stats()
        
        await message.reply("‚úÖ –í—ã–¥–æ—Ö–Ω—É–ª–∏, –µ–±–∞–ª–∞–π –Ω–∞ –∞–¥–º–∏–Ω–µ –ø—Ä–æ—Å—Ä–∞–ª –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—É–ª–∞—Ö")
        
        logger.info(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–∞–Ω–∞ –Ω–∞—Ö—É–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {message.from_user.id if message.from_user else 'unknown'}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–µ—Ä–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –≥–æ–≤–Ω–∞ –Ω–∞ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä")

@router.message(Command("backup"))
async def handle_backup_command(message: Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω—É"""
    try:
        if not message.from_user:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        if not is_admin(message.from_user):
            await message.reply("‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –±—ç–∫–∞–ø!")
            return
        if not os.path.exists(STATS_FILE):
            await message.reply("–§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        if not message.bot:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞.")
            return
        await message.reply_document(FSInputFile(STATS_FILE), caption="–í–æ—Ç –≤–∞—à –±—ç–∫–∞–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!")
        logger.info(f"–ë—ç–∫–∞–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {STATS_FILE}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±—ç–∫–∞–ø–∞: {e}")
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—ç–∫–∞–ø.")

@router.message(Command("restore"))
async def handle_restore_command(message: Message, state: FSMContext):
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Ñ–∞–π–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–∞–π–ª)"""
    try:
        if not message.from_user:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        if not is_admin(message.from_user):
            await message.reply("‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!")
            return
        if not message.reply_to_message or not message.reply_to_message.document:
            await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /restore –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (JSON).")
            return
        document = message.reply_to_message.document
        if not message.bot:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞.")
            return
        file = await message.bot.get_file(document.file_id)
        file_path = STATS_FILE
        if not file.file_path:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")
            return
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        await message.bot.download_file(file.file_path, file_path)
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ storage
        storage.stats = storage._load_stats()
        await message.reply("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞!")
        logger.info(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞: {file_path}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Ñ–∞–π–ª–∞.")

@router.message(Command("help", "–ø–æ–º–æ—â—å"))
async def handle_help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –∏–ª–∏ /–ø–æ–º–æ—â—å"""
    help_text = """
ü§ñ –ë–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ –ø—Ä–æ–≥—É–ª–æ–≤

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/–Ω–µ–ø—Ä–∏—à–µ–ª @username - –ó–∞—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≥—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
/neprishel @username - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
/—Å–Ω—è–ª @username - –°–Ω—è—Ç—å –ø—Ä–æ–≥—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
/—Å—Ç–∞—Ç–∞ - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –ø—Ä–æ–≥—É–ª—å—â–∏–∫–æ–≤
/stats - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
/—Å–∫–æ–ª—å–∫–æ @username - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/resetstats - –°–±—Ä–æ—Å–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
/backup - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
/restore - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Ñ–∞–π–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ /–Ω–µ–ø—Ä–∏—à–µ–ª @username –¥–ª—è –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–≥—É–ª–∞
‚Ä¢ –ò–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π /–Ω–µ–ø—Ä–∏—à–µ–ª
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /—Å–Ω—è–ª @username –¥–ª—è —Å–Ω—è—Ç–∏—è –ø—Ä–æ–≥—É–ª–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /—Å—Ç–∞—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
"""
    
    await message.reply(help_text) 
       
