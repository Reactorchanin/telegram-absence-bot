import re
import random
from typing import Optional, Tuple
from aiogram.types import Message, User

def get_insult_title(count: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç '–æ–±–∏–¥–Ω–æ–µ' –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥—É–ª–æ–≤"""
    if count == 0:
        return "—á–µ—Å—Ç–Ω—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫"
    elif count == 1:
        return random.choice([
            "–ø—Ä–æ–≥—É–ª—å—â–∏–∫-–Ω–æ–≤–∏—á–æ–∫",
            "–ª–µ–Ω–∏–≤–µ—Ü",
            "—Å–∞—á–æ–∫"
        ])
    elif count == 2:
        return random.choice([
            "–∑–∞—è–¥–ª—ã–π –ø—Ä–æ–≥—É–ª—å—â–∏–∫",
            "–º–∞—Å—Ç–µ—Ä –æ—Ç–ª—ã–Ω–∏–≤–∞–Ω–∏—è",
            "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞—á–æ–∫"
        ])
    elif count == 3:
        return random.choice([
            "–ø—Ä–æ–≥—É–ª—å—â–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç",
            "—á–µ–º–ø–∏–æ–Ω –ø–æ –ø—Ä–æ–≥—É–ª–∞–º",
            "–º–∞—Å—Ç–µ—Ä –ø—Ä–æ–ø—É—Å–∫–∞ –≤—Å—Ç—Ä–µ—á"
        ])
    elif count == 4:
        return random.choice([
            "–ø—Ä–æ–≥—É–ª—å—â–∏–∫-–ª–µ–≥–µ–Ω–¥–∞",
            "–∫–æ—Ä–æ–ª—å –ø—Ä–æ–≥—É–ª–æ–≤",
            "–∏–º–ø–µ—Ä–∞—Ç–æ—Ä —Å–∞—á–∫–æ–≤"
        ])
    elif count == 5:
        return random.choice([
            "–ø—Ä–æ–≥—É–ª—å—â–∏–∫-–±–æ–≥",
            "–Ω–µ–ø–æ–±–µ–¥–∏–º—ã–π —Å–∞—á–æ–∫",
            "–º–∞—Å—Ç–µ—Ä –≤—Å–µ–ª–µ–Ω—Å–∫–æ–≥–æ –æ—Ç–ª—ã–Ω–∏–≤–∞–Ω–∏—è"
        ])
    else:
        return random.choice([
            "–ø—Ä–æ–≥—É–ª—å—â–∏–∫-–±–æ–∂–µ—Å—Ç–≤–æ",
            "–∞–±—Å–æ–ª—é—Ç–Ω—ã–π —á–µ–º–ø–∏–æ–Ω –ø—Ä–æ–≥—É–ª–æ–≤",
            "–Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥—ë–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Å–∞—á–∫–æ–≤",
            "–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –æ—Ç–ª—ã–Ω–∏–≤–∞—Ç–µ–ª—å",
            "–∫–æ—Ä–æ–ª—å –≤—Å–µ—Ö –ø—Ä–æ–≥—É–ª—å—â–∏–∫–æ–≤"
        ])

def extract_user_from_message(message: Message) -> Optional[Tuple[str, str]]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (user_id, username) –∏–ª–∏ None
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.reply_to_message and message.reply_to_message.from_user:
        user = message.reply_to_message.from_user
        return str(user.id), user.username or user.first_name or str(user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ username
    text = message.text or message.caption or ""
    
    # –ò—â–µ–º @username –≤ —Ç–µ–∫—Å—Ç–µ
    username_match = re.search(r'@(\w+)', text)
    if username_match:
        username = username_match.group(1)
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏—Å–∫–∞—Ç—å user_id –ø–æ username –≤ –±–∞–∑–µ,
        # –Ω–æ –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º username –∫–∞–∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        return username, username
    
    return None

def format_absence_message(username: str, count: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—É–ª–µ"""
    if count == 1:
        return f"@{username} —Ç–µ–ø–µ—Ä—å 1 –ø—Ä–æ–≥—É–ª"
    elif 2 <= count <= 4:
        return f"@{username} —Ç–µ–ø–µ—Ä—å {count} –ø—Ä–æ–≥—É–ª–∞"
    else:
        return f"@{username} —Ç–µ–ø–µ—Ä—å {count} –ø—Ä–æ–≥—É–ª–æ–≤"

def format_stats_message(stats: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    if not stats:
        return "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥—É–ª–∏–≤–∞–ª! üéâ"
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ–≥—É–ª–æ–≤ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    sorted_stats = sorted(stats.items(), key=lambda x: x[1], reverse=True)
    
    message = "üìä –¢–æ–ø –ø—Ä–æ–≥—É–ª—å—â–∏–∫–æ–≤:\n\n"
    
    for user_id, count in sorted_stats:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å username, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
        username = user_id  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º user_id
        insult_title = get_insult_title(count)
        message += f"@{username} ({insult_title}): {count} –ø—Ä–æ–≥—É–ª–æ–≤\n"
    
    return message

def format_user_stats_message(username: str, count: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if count == 0:
        return f"@{username} –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–≥—É–ª–∏–≤–∞–ª! üéâ"
    else:
        insult_title = get_insult_title(count)
        if count == 1:
            return f"@{username} ({insult_title}) –ø—Ä–æ–≥—É–ª—è–ª 1 —Ä–∞–∑"
        elif 2 <= count <= 4:
            return f"@{username} ({insult_title}) –ø—Ä–æ–≥—É–ª—è–ª {count} —Ä–∞–∑–∞"
        else:
            return f"@{username} ({insult_title}) –ø—Ä–æ–≥—É–ª—è–ª {count} —Ä–∞–∑"

def is_admin(user: User) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    # –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True –¥–ª—è –≤—Å–µ—Ö (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ user_id)
    return True

def get_user_display_name(user: User) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user.username:
        return f"@{user.username}"
    elif user.first_name:
        return user.first_name
    else:
        return str(user.id) 